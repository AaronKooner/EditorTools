# [PackageDev] target_format: plist, ext: tmLanguage
# Converted from https://github.com/jim-hart/EditorTools/tree/develop/Atom/grammars

---
name: kOS
scopeName: source.kos
fileTypes: [ks]
uuid: 1cb673ae-c225-4679-82a4-be7553ac0769

patterns:

# --------------------------Core Syntax Highlighting---------------------------
- name: string.quoted.double.ks
  match: (["])(?:(?=(\\?))\2.)*?\1
  comment: strings

- name: comment.line.kos
  match: (?:(\/\/.*))
  comment: source code comments

- name: punctuation.terminator.kos
  match: (\.)\b
  comment: kOS line terminator

- name: constant.numeric.kos
  match: \b(([0-9]+\.?[0-9]*)|(\.[0-9]+))\b
  comment: Standard digits

- name: constant.numeric.kos
  match: \b(?i:(true|false))\b
  comment: Boolean constants

- name: keyword.control.conditional.kos
  match: \b(?i:(if|else|when|then))\b
  comment: flow control (conditional)

- name: keyword.control.repeat.kos
  match: \b(?i:(for|until|from))\b
  comment: flow control (loops)

- name: support.function.kos
  match: \b(?i:(list|range))(?=\()\b
  comment: basic collections when used as functions

- name: keyword.control.statement.kos
  match: \b(?i:(break|preserve|do|wait|step|return))\b
  comment: flow control (statements)

- name: keyword.operator.logical.kos
  match: \b(?i:(and|or|not))\b
  comment: boolean operators

- name: keyword.operator.assignment.kos
  match: \b(?i:(declare|parameter|local|global|set|to|is|\=|@lazyglobal))\b
  comment: assignment operators and directives

- name: keyword.operator.comparison.kos
  match: (<\=|>\=|<|>|<>|\=)
  comment: comparison operator

- name: keyword.operator.arithmetic.kos
  match: (\+|\-|\*|/|\^)
  comment: arithmetic operator

- name: keyword.other.kos
  match: \b(?i:(at|in|all|list|range|))\b
  comment: other keywords...


# -------------------------------User Functions--------------------------------
- name: support.function.kos
  match: \b(?i:(function))(?=\s)
  comment: user defined function declaration

- name: entity.name.kos
  match: \b(?i:((?<=function\s)[\_[:alpha:]]\w+))\b
  comment: user defined function name (must start with letter or underscore)

- name: support.function.kos
  match: \b(?<!\:)(?i:(\w+)(?=\())\b
  comment: general function identifier

- name: support.function.kos
  match: (?i:(\w+)(?=@))
  comment: delegate function-name identifier

- name: keyword.other.kos
  match: (?i:(?<=\w)(@))
  comment: delegate tag; working on using captures with above


# --------------------Mathematical Functions and Constants---------------------
- name: constant.numeric.kos
  match: \b(?i:(?<=constant\:)(e|g|pi|c))\b
  comment: mathematical constants

- name: support.function.kos
  match: \b(?i:(?<=constant\:)(atmtokpa|kpatoatm|degtorad|radtodeg))\b
  comment: Conversion functions

- name: support.function.kos
  match: \b(?i:(abs|ceiling|floor|ln|log10|mod|min|max|round|sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|constant))\b
  comment: Core functions


# -------------------------------Terminal/Files--------------------------------
- name: support.function.kos
  match: \b(?i:(print|clearscreen|reboot|shutdown))\b
  comment: Terminal commands

- name: support.function.kos
  match: \b(?i:(rename|delete|edit|copy|batch|log|run|compile|switch))\b
  comment: Terminal commands for files and volumes

- name: support.function.kos
  match: \b(?i:(?<=volume\:)(exists|create|createdir|open))\b
  comment: volume navigation and creation

- name: support.function.kos
  match: \b(?i:(?<=volumefile\:)(readall|write|writeln|clear))\b
  comment: file reading/writing

- name: support.function.kos
  match: \b(?i:(cd|copypath|movepath|deletepath|path|scriptpath|runpath))\b
  comment: file reading/writing

- name: constant.language.kos
  match: \b(?i:(file(s)?|volume(file|s)?|mapview))\b
  comment: File structures and terminal constants

- name: variable.parameter.kos
  match: \b(?i:(?<=version\:)(major|minor|build))\b
  comment: version parameters

- name: constant.language.kos
  match: \b(?i:(version|(session)?time|config|core))\b
  comment: kOS system information


# --------------------------------Output Colors--------------------------------
- name: support.constant.kos
  match: \b(?i:(red|green|blue|yellow|cyan|magenta|purple|white|black))\b
  comment: Available colors

- name: support.constant.kos
  match: \b(?i:(rgba|hsva))\b
  comment: color structures

- name: variable.parameter.kos
  match: \b(?i:(?<=rgba\:)(r(ed)?|g(reen)?|b(lue)?|a(lpha)?|html|hex))\b
  comment: RGBA structure parameters

- name: support.function.kos
  match: \b(?i:(?<=hsva\:)(h(ue)?|s(aturation)?|v(alue)?))\b
  comment: HSVA structure parameters

- name: support.function.kos
  match: \b(?i:(rgb(a)?|hsv(a)?))\b
  comment: Functions for creating user defined colors


# -----------------------------Ship Module Control-----------------------------
- name: keyword.control.statement.kos 
  match: \b(?i:(lock|unlock|toggle|on|off|activate|deploy))\b
  comment: Ship system control statements

- name: support.function.kos
  match: \b(?i:(activate|shutdown|stage))\b
  comment: core ship functions

- name: constant.language.kos
  match: \b(?i:(sas|rcs|gear|lights|panels|brakes|abort|ag[1-9]))\b
  comment: Basic action groups

- name: constant.language.kos
  match: \b(?i:(ag([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|250)\b))
  comment: Custom action groups (supports up to AG250 if using extended action groups)

- name: constant.language.kos
  match: \b(?i:(legs|chutes(safe)?|panels|radiators|ladders|bays|(deploy)?drills|fuelcells|isru|intakes))\b
  comment: kOS pseudo action groups


# --------------------Ship/Vessel Structures and Parameters--------------------

#CORE
- name: constant.language.kos
  match: \b(?i:(part|vessel|engines))(?=\:|\s)\b
  comment: Structures

- name: constant.language.kos
  match: \b(?<!\:)(?i:((wheel)?(throttle|steering)|ship|target|encounter|alt|(head|fac)ing|(pro|retro)grade|maxthrust|velocity|geoposition|(lati|longi)tude|up|north|body|angular(momentum|vel|velocity)|commrange|mass|(vertical|surface|air)speed|vesselname|altitude|apoapsis|periapsis|sensor|srf(prograde|retrograde)|obt|status))((?=\:)|\s)
  comment: Ship parameters

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(control|(bear|head|fac)ing|maxthrust|(wet|dry)?mass|(vertical|surface|air)speed|termvelocity|(ship)?name|angular(momentum|vel)|sensors|loaded|patches|rootpart|resources|(all)?parts|parts(tagged|dubbed|named|titled)|modulesnamed|(parts|modules)ingroup))\b
  comment: vessel structure member

#GENERAL PARTS
- name: support.function.kos
  match: \b(?<!\:)(?i:(bodies|targets|resources|parts|engines|sensors|elements|dockingports))(?=\()\b
  comment: part functions

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|title|(dry|wet)?mass|tag|controlfrom|stage|uid|rotation|position|facing|resources|targetable|ship|(all)?modules|parent|has(parent|physics)|children))\b
  comment: part parameters

- name: support.function.kos
  match: \b(?i:(getmodule(byindex)?|(get|set)field|do(event|action))|has(field|event|action))\b
  comment: part/partmodule functions

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|part|all((fields)|((event|action)(s|names)))))\b
  comment: partmodule structure member

#SENSORS
- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(acc|pres|temp|grav|light))\b
  comment: vessel sensors structure parameters

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(active|type|readout|powerconsumption))\b
  comment: sensor structure parameters

#ENGINES
- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(thrust(limit|lock)|(max)?thrust|fuelflow|isp|flameout|ignition|allow(restart|shutdown)))\b
  comment: engine parameters

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(range|responsespeed|(pitch|yaw|roll)angle|lock))\b
  comment: gimbal parameters

#RESOURCES
- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|amount|capacity|parts))\b
  comment: aggregateresource structure parameters

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|amount|capacity|toggleable|enabled))\b
  comment: resource structure parameters

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(ready|number|resources))\b
  comment: stage structure parameters


# ---------------------------------Navigation----------------------------------

#TIME AND ETA
- name: variable.parameter.kos
  match: \b(?i:(?<=alt\:)(radar))\b
  comment: ETA structure parameters 

- name: variable.parameter.kos
  match: \b(?i:(?<=time\:)(clock|calendar|year|day|hour|minute|seconds))\b
  comment: TIME parameters

- name: variable.parameter.kos
  match: \b(?i:(?<=timespan\:)(clock|calendar|year|day|hour|minute|seconds))\b
  comment: TIMESPAN parameters, because \K, \G, and everything else I tried doesn't like me.

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(apoapsis|periapsis|transition))\b
  comment: ETA structure parameters

#NODES AND WAYPOINTS
- name: constant.language.kos
  match: \b(?i:(waypoint|allwaypoints|nextnode|ship|soi))\b
  comment: SHIP and navigation structures

- name: support.function.kos
  match: \b(?i:(add|remove))\b
  comment: Node control

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(deltav|burnvector|eta|prograde|radialout|normal|orbit))\b
  comment: maneuvernode structure member

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|body|(geo)?position|altitude|agl|nearsurface|grounded|index|clustered))\b
  comment: waypoint structure member

#SCALARS AND VECTORS
- name: support.function.kos
  match: \b(?i:(v(dot|crs|ang|xcl)|vector(dotproduct|crossproduct|angle|exclude)))\b
  comment: vector functions

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(x|y|z|normalized|sqrmagnitude|direction|vec))\b
  comment: vector structure member

- name: support.function.kos
  match: \b(?i:(r|q|heading|lookdirup|angleaxis|rotatefromto))\b
  comment: directional functions

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:((fore|top|up|star|right)?vector|inverse|mag))\b
  comment: directional structure parameters

- name: support.type.kos
  match: \b(?i:(v|vector|direction|latlng))\b
  comment: support types

- name: support.function.kos
  match: \b(?i:(position|velocity|orbit)at)\b
  comment: prediction functions

#ORBIT
- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|apoapsis|periapsis|body|period|inclination|eccentricity|semi(major|minor)axis|lan|longitudeofascendingnode|argumentofperiapsis|trueanomaly|meananomalyatepoch|transition|position|velocity|(has)?nextpatch))\b
  comment: orbit structure member

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(orbit|surface|name|body|has(body|orbit|obt)|obt|up|north|(srf)?(prograde|retrograde)|velocity|distance|direction|latitude|longitude|altitude|(geo)?position|patches))\b
  comment: orbital structure member

#BODIES
- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(body|exists|oxygen|scale|sealevelpressure|height))\b
  comment: atmosphere structure member

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(name|description|mass|altitude|rotationperiod|radius|mu|atm|angularvel|(geoposition|altitude)of))\b
  comment: body structure member

- name: variable.parameter.kos
  match: \b(?<=\:)(?i:(lat|lng|distance|terrainheight|heading|bearing|(altitude)?position))\b
  comment: geographical structure member

...

